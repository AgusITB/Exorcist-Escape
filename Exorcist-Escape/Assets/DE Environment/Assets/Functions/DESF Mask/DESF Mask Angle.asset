%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 78b2425a2284af743826c689403a4924, type: 3}
  m_Name: DESF Mask Angle
  m_EditorClassIdentifier: 
  m_functionInfo: "// Made with Amplify Shader Editor v1.9.3.2\n// Available at the
    Unity Asset Store - http://u3d.as/y3X \n/*ASEBEGIN\nVersion=19302\nNode;AmplifyShaderEditor.CommentaryNode;53;144,-560;Inherit;False;627.2872;396.6096;Lerp
    Inverse Node;4;54;50;49;48;;0.05660379,0.05660379,0.05660379,1;0;0\nNode;AmplifyShaderEditor.StickyNoteNode;29;144,-784;Inherit;False;498.3517;193.2775;Angle
    Mask;;0.06603771,0.06261123,0.06261123,1;The Angle Mask subgraph uses the direction
    that a surface is facing to determine if the mask should be black or white. $$If
    the surface is pointing in the direction of the given input vector, the mask
    is white.$$If it\u2019s pointing away from the given vector, the mask is black.$;0;0\nNode;AmplifyShaderEditor.StickyNoteNode;35;-384,-688;Inherit;False;345.6074;148.5708;Dot
    Product;;0,0,0,1;The MaskVector input is set to (0,1,0) - which is a vector pointing
    in the up direction (positive Y). When the object\u2019s surface (Normal) is
    pointing in that direction, the mask is white.  When the surface is pointing
    away from that direction, the mask is black.;0;0\nNode;AmplifyShaderEditor.StickyNoteNode;43;-144,-272;Inherit;False;257.7661;124.0585;Min
    & Max;;0,0,0,1;The closer together the Min and Max values the sharper the falloff
    and vice versa. Min and Max should be greater than 0 and less than 1.;0;0\nNode;AmplifyShaderEditor.StickyNoteNode;54;208,-320;Inherit;False;487.1284;147.9;;;0,0,0,1;Returns
    the linear parameter that produces the interpolant specified by input Alpha within
    the range of input A to input B.$ Inverse Lerp is the inverse operation of the
    Lerp Node. It can be used to determine what the input to a Lerp was based on
    its output. $$cheap replacement of smoothstep;0;0\nNode;AmplifyShaderEditor.SimpleSubtractOpNode;48;208,-512;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleSubtractOpNode;49;208,-416;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleDivideOpNode;50;384,-512;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.DotProductOpNode;40;-384,-512;Inherit;False;2;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionInput;20;-16,-432;Inherit;False;Minimum;1;2;False;1;0;FLOAT;0.5;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionInput;21;-16,-352;Inherit;False;Maximum;1;3;False;1;0;FLOAT;0.4;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionInput;42;-576,-416;Inherit;False;Normal;3;1;False;1;0;FLOAT3;0,0,1;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.TransformPositionNode;47;-1088,-416;Inherit;False;Tangent;World;False;Precise;True;1;0;FLOAT3;0,0,0;False;4;FLOAT3;0;FLOAT;1;FLOAT;2;FLOAT;3\nNode;AmplifyShaderEditor.LerpOp;44;-816,-416;Inherit;False;3;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.WorldNormalVector;45;-1056,-272;Inherit;False;False;1;0;FLOAT3;0,0,1;False;4;FLOAT3;0;FLOAT;1;FLOAT;2;FLOAT;3\nNode;AmplifyShaderEditor.RangedFloatNode;46;-1072,-128;Inherit;False;Constant;_Float2;Float
    2;0;0;Create;True;0;0;0;False;0;False;0.85;0;0;0;0;1;FLOAT;0\nNode;AmplifyShaderEditor.SaturateNode;23;800,-512;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionInput;41;-608,-512;Inherit;False;Mask
    Vector;3;0;False;1;0;FLOAT3;0,1,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.FunctionOutput;0;976,-512;Inherit;True;True;-1;Mask;0;True;1;0;FLOAT;0;False;1;FLOAT;0\nWireConnection;48;0;40;0\nWireConnection;48;1;20;0\nWireConnection;49;0;21;0\nWireConnection;49;1;20;0\nWireConnection;50;0;48;0\nWireConnection;50;1;49;0\nWireConnection;40;0;41;0\nWireConnection;40;1;42;0\nWireConnection;42;0;44;0\nWireConnection;44;0;47;0\nWireConnection;44;1;45;0\nWireConnection;44;2;46;0\nWireConnection;23;0;50;0\nWireConnection;0;0;23;0\nASEEND*/\n//CHKSM=2A33B4089E4ADFCF817396C33789DDB8B95FC936"
  m_functionName: 
  m_description: 'Altitude Mask Node

'
  m_additionalIncludes:
    m_additionalIncludes: []
    m_outsideIncludes: []
  m_additionalPragmas:
    m_additionalPragmas: []
    m_outsidePragmas: []
  m_additionalDirectives:
    m_validData: 0
    m_isDirty: 0
    m_moduleName: ' Additional Directives'
    m_independentModule: 1
    m_customEdited: 0
    m_additionalDirectives: []
    m_shaderFunctionDirectives: []
    m_nativeDirectives: []
    m_nativeDirectivesIndex: -1
    m_nativeDirectivesFoldout: 0
    m_directivesSaveItems: []
  m_nodeCategory: 0
  m_headerStyle: 2
  m_headerColor: {r: 0.4392157, g: 0.34509805, b: 0.015686275, a: 1}
  m_customNodeCategory: DESF Mask
  m_previewPosition: 0
  m_hidden: 0
  m_url: 
