%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 78b2425a2284af743826c689403a4924, type: 3}
  m_Name: DESF Normal Blend
  m_EditorClassIdentifier: 
  m_functionInfo: "// Made with Amplify Shader Editor v1.9.2.2\n// Available at the
    Unity Asset Store - http://u3d.as/y3X \n/*ASEBEGIN\nVersion=19202\nNode;AmplifyShaderEditor.CommentaryNode;43;-504.6348,-768;Inherit;False;2119.4;794.9796;Math;31;1;27;37;40;45;44;21;36;26;23;24;7;8;16;13;20;18;17;9;15;3;2;33;32;31;30;35;34;22;47;48;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;42;-512,-1168;Inherit;False;994.7711;332.598;Blend
    Normal Node;2;46;41;;0,0,0,1;0;0\nNode;AmplifyShaderEditor.StickyNoteNode;22;1136,-624;Inherit;False;419.27;291.64;;;0,0,0,1;The
    Normal Blend node is used for combining the effects of two normal maps together.$$The
    Default mode is slightly cheaper, and the Reoriented mode is more accurate.$$Default$commonly
    called the Whiteout method.$$Reoriented$commonly called the RNM method.  It's
    the most accurate but is slightly more computationally expensive.$$$;0;0\nNode;AmplifyShaderEditor.BlendNormalsNode;41;-464,-1120;Inherit;True;0;3;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.SimpleAddOpNode;34;272,-720;Inherit;False;2;2;0;FLOAT2;0,0;False;1;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;35;256,-624;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SwizzleNode;30;-16,-720;Inherit;False;FLOAT2;0;1;2;3;1;0;FLOAT3;0,0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.SwizzleNode;31;-16,-640;Inherit;False;FLOAT;2;1;2;3;1;0;FLOAT3;0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SwizzleNode;32;-16,-560;Inherit;False;FLOAT2;0;1;2;3;1;0;FLOAT3;0,0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.SwizzleNode;33;-16,-480;Inherit;False;FLOAT;2;1;2;3;1;0;FLOAT3;0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.BreakToComponentsNode;15;-16,-400;Inherit;False;FLOAT3;1;0;FLOAT3;0,0,0;False;16;FLOAT;0;FLOAT;1;FLOAT;2;FLOAT;3;FLOAT;4;FLOAT;5;FLOAT;6;FLOAT;7;FLOAT;8;FLOAT;9;FLOAT;10;FLOAT;11;FLOAT;12;FLOAT;13;FLOAT;14;FLOAT;15\nNode;AmplifyShaderEditor.DynamicAppendNode;9;272,-400;Inherit;False;FLOAT3;4;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.DotProductOpNode;17;448,-336;Inherit;False;2;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;18;576,-400;Inherit;False;2;2;0;FLOAT3;0,0,0;False;1;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.SimpleSubtractOpNode;20;752,-400;Inherit;False;2;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;13;576,-288;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.SimpleAddOpNode;16;144,-288;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;1;False;1;FLOAT;0\nNode;AmplifyShaderEditor.DynamicAppendNode;8;288,-192;Inherit;False;FLOAT3;4;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.BreakToComponentsNode;7;-16,-192;Inherit;False;FLOAT3;1;0;FLOAT3;0,0,0;False;16;FLOAT;0;FLOAT;1;FLOAT;2;FLOAT;3;FLOAT;4;FLOAT;5;FLOAT;6;FLOAT;7;FLOAT;8;FLOAT;9;FLOAT;10;FLOAT;11;FLOAT;12;FLOAT;13;FLOAT;14;FLOAT;15\nNode;AmplifyShaderEditor.NegateNode;24;128,-80;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.NegateNode;23;128,-192;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.DynamicAppendNode;36;448,-720;Inherit;False;FLOAT3;4;0;FLOAT2;0,0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.FunctionSwitch;21;1136,-720;Inherit;False;Type;False;0;2;-1;Default;Reoriented;Object;-1;10;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT;0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT;0;False;6;FLOAT;0;False;7;FLOAT;0;False;8;FLOAT;0;False;9;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.WireNode;40;528,-192;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.NormalizeNode;37;736,-720;Inherit;False;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.FunctionSubtitle;27;896,-720;Inherit;False;Default;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.StickyNoteNode;46;-192,-1120;Inherit;False;608.576;211.1429;;;0,0,0,1;The
    Blend Normals node blends two normals using the Whiteout Blend method$https://www.chrisoat.com/papers/Oat-Wrinkles(Siggraph07).pdf$$Instead
    of just averaging both normal maps, they are calculated the following way:$BlendedNormal
    = normalize( float3( A.xy + B.xy, A.z*B.z )$$This way details, which would have
    been lost on an regular average, are better preserved$;0;0\nNode;AmplifyShaderEditor.StickyNoteNode;47;-480,-720;Inherit;False;224;105;Normal
    A;;0,0,0,1;First normal to blend;0;0\nNode;AmplifyShaderEditor.StickyNoteNode;48;-480,-560;Inherit;False;224;105;Normal
    B;;0,0,0,1;Second normal to blend;0;0\nNode;AmplifyShaderEditor.FunctionInput;2;-208,-720;Inherit;False;Normal
    A;3;0;False;1;0;FLOAT3;0,0,1;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.FunctionInput;3;-208,-560;Inherit;False;Normal
    B;3;1;False;1;0;FLOAT3;0,0,1;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.FunctionSubtitle;26;896,-400;Inherit;False;Reoriented;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.WireNode;45;1072,-400;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.WireNode;44;1072,-640;Inherit;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.FunctionOutput;1;1376,-720;Inherit;False;True;-1;Normal;0;True;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nWireConnection;34;0;30;0\nWireConnection;34;1;32;0\nWireConnection;35;0;31;0\nWireConnection;35;1;33;0\nWireConnection;30;0;2;0\nWireConnection;31;0;2;0\nWireConnection;32;0;3;0\nWireConnection;33;0;3;0\nWireConnection;15;0;2;0\nWireConnection;9;0;15;0\nWireConnection;9;1;15;1\nWireConnection;9;2;16;0\nWireConnection;17;0;9;0\nWireConnection;17;1;8;0\nWireConnection;18;0;9;0\nWireConnection;18;1;17;0\nWireConnection;20;0;18;0\nWireConnection;20;1;13;0\nWireConnection;13;0;16;0\nWireConnection;13;1;40;0\nWireConnection;16;0;15;2\nWireConnection;8;0;23;0\nWireConnection;8;1;24;0\nWireConnection;8;2;7;2\nWireConnection;7;0;3;0\nWireConnection;24;0;7;1\nWireConnection;23;0;7;0\nWireConnection;36;0;34;0\nWireConnection;36;2;35;0\nWireConnection;21;0;27;0\nWireConnection;21;1;44;0\nWireConnection;40;0;8;0\nWireConnection;37;0;36;0\nWireConnection;27;0;37;0\nWireConnection;26;0;20;0\nWireConnection;45;0;26;0\nWireConnection;44;0;45;0\nWireConnection;1;0;21;0\nASEEND*/\n//CHKSM=335E233D37EB29710D3D4DA5A025FAD87B08EC6A"
  m_functionName: 
  m_description: 'Normal Blend Node


    Teaching Sample

'
  m_additionalIncludes:
    m_additionalIncludes: []
    m_outsideIncludes: []
  m_additionalPragmas:
    m_additionalPragmas: []
    m_outsidePragmas: []
  m_additionalDirectives:
    m_validData: 0
    m_isDirty: 0
    m_moduleName: ' Additional Directives'
    m_independentModule: 1
    m_customEdited: 0
    m_additionalDirectives: []
    m_shaderFunctionDirectives: []
    m_nativeDirectives: []
    m_nativeDirectivesIndex: -1
    m_nativeDirectivesFoldout: 0
    m_directivesSaveItems: []
  m_nodeCategory: 0
  m_headerStyle: 2
  m_headerColor: {r: 0, g: 0.18039216, b: 0.4745098, a: 1}
  m_customNodeCategory: DESF Normal
  m_previewPosition: 0
  m_hidden: 0
  m_url: 
