%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 78b2425a2284af743826c689403a4924, type: 3}
  m_Name: DESF Lerp Inverse
  m_EditorClassIdentifier: 
  m_functionInfo: "// Made with Amplify Shader Editor v1.9.3.2\n// Available at the
    Unity Asset Store - http://u3d.as/y3X \n/*ASEBEGIN\nVersion=19302\nNode;AmplifyShaderEditor.CommentaryNode;18;-496,256;Inherit;False;1120.292;487.7648;Exsample
    Case Use Sharpen;9;17;15;20;16;14;12;11;10;19;;0.1509434,0.1509434,0.1509434,1;0;0\nNode;AmplifyShaderEditor.StickyNoteNode;7;-385.6088,-387.5623;Inherit;False;513.8601;183.9877;Lerp
    Inverse Node;;0,0,0,1;Returns the linear parameter that produces the interpolant
    specified by input Alpha within the range of input A to input B.$ Inverse Lerp
    is the inverse operation of the Lerp Node. It can be used to determine what the
    input to a Lerp was based on its output. $$cheap replacement of smoothstep;0;0\nNode;AmplifyShaderEditor.FunctionInput;1;-448,0;Inherit;False;Alpha;1;2;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.StickyNoteNode;8;-256,64;Inherit;False;251;100;;;0.03773582,0.03773582,0.03773582,1;Out
    = (Alpha - A)/(B - A)@;0;0\nNode;AmplifyShaderEditor.StickyNoteNode;9;144,-384;Inherit;False;427;170;;;0,0,0,1;**Lerp**$the
    value  between 0 and 2 with a Alpha value of 0.5 is 1. $$**Inverse Lerp**$the
    value  between 0 and 2 with a Alpha value of 1 is 0.5.$$$;0;0\nNode;AmplifyShaderEditor.StickyNoteNode;19;-432,352;Inherit;False;164.8985;134.7631;;;0,0,0,1;You
    can control the placement and width of the gradient with the A and B inputs.;0;0\nNode;AmplifyShaderEditor.SimpleSubtractOpNode;10;-48,336;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleSubtractOpNode;11;-48,432;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.TexCoordVertexDataNode;16;-320,512;Inherit;False;0;2;0;5;FLOAT2;0;FLOAT;1;FLOAT;2;FLOAT;3;FLOAT;4\nNode;AmplifyShaderEditor.StickyNoteNode;20;-32,560;Inherit;False;596.8157;118.4662;;;0,0,0,1;The
    Inverse Lerp node can be used to control the spread of a gradient. A and B values
    of 0 and 1 will just give you the original gradient, but moving the values closer
    together will tighten up the gradient and give you a sharper line - with the
    size of the gradient being controlled by the distance between A and B.;0;0\nNode;AmplifyShaderEditor.SaturateNode;17;416,336;Inherit;True;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RangedFloatNode;15;-240,416;Inherit;False;Constant;_Float1;Float
    1;0;0;Create;True;0;0;0;False;0;False;0.5;0;0;0;0;1;FLOAT;0\nNode;AmplifyShaderEditor.RangedFloatNode;14;-256,336;Inherit;False;Constant;_Float0;Float
    0;0;0;Create;True;0;0;0;False;0;False;0.45;0;0;0;0;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleDivideOpNode;12;128,336;Inherit;True;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleSubtractOpNode;4;-256,-160;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleSubtractOpNode;6;-256,-64;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleDivideOpNode;5;-80,-160;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionSwitch;21;224,-160;Inherit;False;Saturate;True;1;2;-1;In
    0;In 1;Object;-1;10;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT;0;False;6;FLOAT;0;False;7;FLOAT;0;False;8;FLOAT;0;False;9;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SaturateNode;22;48,-96;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionInput;2;-432,-160;Inherit;False;A;1;0;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionInput;3;-432,-80;Inherit;False;B;1;1;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionOutput;0;464,-160;Inherit;True;True;-1;Output;0;True;1;0;FLOAT;0;False;1;FLOAT;0\nWireConnection;10;0;16;2\nWireConnection;10;1;14;0\nWireConnection;11;0;15;0\nWireConnection;11;1;14;0\nWireConnection;17;0;12;0\nWireConnection;12;0;10;0\nWireConnection;12;1;11;0\nWireConnection;4;0;1;0\nWireConnection;4;1;2;0\nWireConnection;6;0;3;0\nWireConnection;6;1;2;0\nWireConnection;5;0;4;0\nWireConnection;5;1;6;0\nWireConnection;21;0;5;0\nWireConnection;21;1;22;0\nWireConnection;22;0;5;0\nWireConnection;0;0;21;0\nASEEND*/\n//CHKSM=4EA4CFADAC14CEEA3C2C8F9584D6BCA04CF1AF3A"
  m_functionName: 
  m_description: 'Lerp Inverse Node

'
  m_additionalIncludes:
    m_additionalIncludes: []
    m_outsideIncludes: []
  m_additionalPragmas:
    m_additionalPragmas: []
    m_outsidePragmas: []
  m_additionalDirectives:
    m_validData: 0
    m_isDirty: 0
    m_moduleName: ' Additional Directives'
    m_independentModule: 1
    m_customEdited: 0
    m_additionalDirectives: []
    m_shaderFunctionDirectives: []
    m_nativeDirectives: []
    m_nativeDirectivesIndex: -1
    m_nativeDirectivesFoldout: 0
    m_directivesSaveItems: []
  m_nodeCategory: 0
  m_headerStyle: 2
  m_headerColor: {r: 0.19215687, g: 0.25882354, b: 0.3254902, a: 1}
  m_customNodeCategory: DESF Math Interpolation
  m_previewPosition: 0
  m_hidden: 0
  m_url: 
